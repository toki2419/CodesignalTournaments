Try to solve this challenge with linear complexity and using O(1) additional memory, since this is what you would be asked to do during a real interview.

You have an array a containing 2 * n + 2 positive numbers, in which n numbers occur twice and two other numbers occur only once and are distinct. Find the two distinct numbers and return them in ascending order.

Example

For a = [1, 3, 5, 6, 1, 4, 3, 6], the output should be
findTheNumbers(a) = [4, 5];
For a = [4, 5, 6, 5, 3, 4], the output should be
findTheNumbers(a) = [3, 6].

===================================================================

std::vector<int> findTheNumbers(std::vector<int> a) {
    sort(a.begin(), a.end());
    int i = 0;
    vector<int> b;
    while(i< a.size() - 1){
        if(a[i] != a[i+1]) {
            b.push_back(a[i]);
            i++;
        }
        else i += 2;
    }
    if(b.size() == 2) return b;
    if(b.size() == 1) b.push_back(a[a.size()-1]);
    return b;
}