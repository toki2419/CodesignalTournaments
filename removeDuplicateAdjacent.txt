Given a string s, recursively remove any adjacent duplicate characters that it contains.

Example

For s = "cooodefightssforrrcodee", the output should be
removeDuplicateAdjacent(s) = "cdefightfocod";
For s = "acaaabbbacdddd", the output should be
removeDuplicateAdjacent(s) = "acac".

===================================================================

int check(string s){
    for(int i = 0; i < s.length() - 1; i++)
        if (s[i] == s[i+1]) return 1;
    return 0;
}
std::string removeDuplicateAdjacent(std::string s) {
    while(check(s)){
        string r = "";
        for(int i = 0; i < s.length(); i++){
            if(s[i]==s[i+1])
                i++;
            else{
                if(i==0)
                    r+=s[i];
                else
                    if(s[i]!=s[i-1])
                        r+=s[i];
            }
        }
        if(r=="") return r;
        s = r;
    }
    return s;
}
